test_structs.TestStructs.test_item_concat_single_num=Record(Attr("tag", Record(Slot("node", "foo"), Slot("lane", "bar"))), 42)
test_structs.TestStructs.test_record_map_get_item_existing=Attr("Second", 2nd)
test_structs.TestStructs.test_bool_false=False
test_structs.TestStructs.test_bool_true=True
test_structs.TestStructs.test_create_attr_from_string_key=Attr("Foo", "Bar")
test_structs.TestStructs.test_create_attr_from_text_key=Attr("Ghost", Boo)
test_structs.TestStructs.test_create_num_from_negative_float=-9.9
test_structs.TestStructs.test_create_num_from_negative_integer=-99
test_structs.TestStructs.test_create_num_from_positive_float=9.9
test_structs.TestStructs.test_create_num_from_positive_integer=99
test_structs.TestStructs.test_create_text_from_empty_string=""
test_structs.TestStructs.test_create_text_from_string="Tea"
test_structs.TestStructs.test_create_value_from_object_boolean=True
test_structs.TestStructs.test_create_value_from_object_float=3.14
test_structs.TestStructs.test_create_value_from_object_int=33
test_structs.TestStructs.test_create_value_from_object_none=Extant()
test_structs.TestStructs.test_create_value_from_object_str="Dog"
test_structs.TestStructs.test_create_value_from_object_value="Boom"
test_structs.TestStructs.test_item_absent=Absent()
test_structs.TestStructs.test_item_concat_multiple_record=Record(Record(Slot("node", "foo"), Slot("lane", "bar"), Record(Slot("node", "boo"), Slot("lane", "far"))), Slot("node", "poo"), Slot("lane", "car"))
test_structs.TestStructs.test_item_concat_multiple_text=Record(Record(Slot("node", "foo"), Slot("lane", "bar"), 42), "Polly the parrot")
test_structs.TestStructs.test_item_concat_single_record=Record(Attr("tag", Record(Slot("node", "foo"), Slot("lane", "bar"))), Slot("attr", "hello"), Slot("message", "world"))
test_structs.TestStructs.test_item_concat_zero_bool=Record(Record(), True)
test_structs.TestStructs.test_item_concat_zero_record=Record(Record(), Slot("node", "moo"), Slot("lane", "cow"))
test_structs.TestStructs.test_item_create_from_item=Record(Slot("node", "boo"), Slot("lane", "ghost"))
test_structs.TestStructs.test_item_create_from_other="monkey"
test_structs.TestStructs.test_item_create_from_tuple=Slot(node, boo)
test_structs.TestStructs.test_item_extant=Extant()
test_structs.TestStructs.test_num_float=0.11
test_structs.TestStructs.test_num_integer=33
test_structs.TestStructs.test_record_add_all_empty=Record()
test_structs.TestStructs.test_record_add_all_multiple=Record("Foo", "Bar", "Baz")
test_structs.TestStructs.test_record_add_all_single=Record("Foo")
test_structs.TestStructs.test_record_add_slot_key_item_value_item=Record(Slot("Good", "Dog"))
test_structs.TestStructs.test_record_add_slot_key_item_value_string=Record(Slot("Foo", "Bar"))
test_structs.TestStructs.test_record_add_slot_key_string_value_item=Record(Slot("Baz", "Qux"))
test_structs.TestStructs.test_record_add_slot_key_string_value_string=Record(Slot("Wibble", "Wobble"))
test_structs.TestStructs.test_record_map_create_with_field=Record(Attr("Foo", Bar))
test_structs.TestStructs.test_slot_key_only=Slot(Foo, Extant())
test_structs.TestStructs.test_slot_key_value=Slot(Foo, Bar)